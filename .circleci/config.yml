version: 2.1
orbs:
  python: circleci/python@2.1.1
  browser-tools: circleci/browser-tools@1.2.3

commands:
  setup_docker:
    description: "Setup Docker Environment"
    steps:
      - setup_remote_docker:
          version: 20.10.7

jobs:
  build:
    docker:
      - image: cimg/python:3.12.1
    working_directory: ~/project
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "poetry.lock" }}
      - python/install-packages:
          pkg-manager: poetry
      - save_cache:
          paths:
            - ~/.cache/pypoetry
          key: v1-dependencies-{{ checksum "poetry.lock" }}
      - run:
          name: Test and Coverage
          command: |
            poetry run python manage.py migrate
            poetry run coverage run --source='.' manage.py test

  deploy:
    docker:
      - image: cimg/base:stable
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - setup_docker
      - run:
          name: Debug Docker
          command: |
            docker info
            docker version
            echo $DOCKERHUB_USERNAME
            echo $DOCKERHUB_PASSWORD
            echo $RENDER_WEBHOOK
      - run:
          name: Build and Deploy
          command: |
            IMAGE_TAG=$DOCKERHUB_USERNAME/p13:$CIRCLE_BUILD_NUM
            docker build -t $IMAGE_TAG .
            docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
            docker push $IMAGE_TAG
            curl -X POST $RENDER_WEBHOOK --data "image=$IMAGE_TAG"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main
