version: 2.1
orbs:
  python: circleci/python@2.1.1

commands:
  setup_docker:
    description: "Setup Docker Environment"
    steps:
      - setup_remote_docker:
          version: 20.10.7

jobs:
  build_and_deploy:
    docker:
      - image: cimg/python:3.12.1

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "poetry.lock" }}
      - python/install-packages:
          pkg-manager: poetry
      - save_cache:
          paths:
            - ~/.cache/pypoetry
          key: v1-dependencies-{{ checksum "poetry.lock" }}
      - run:
          name: lint and format
          command: |
            poetry run black .
            poetry run flake8 . --ignore=F841
      - run:
          name: Test and Coverage
          command: |
            poetry run python manage.py migrate
            poetry run coverage run --source='.' manage.py test 
            poetry run coverage report
      - setup_docker
      - run:
          name: Docker Login
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
      - run:
          name: Build Docker Image
          command: docker build -t $DOCKERHUB_USERNAME/p13:$CIRCLE_BUILD_NUM	 ./
      - run:
          name: Push Docker Image
          command: docker push $DOCKERHUB_USERNAME/p13:$CIRCLE_BUILD_NUM
      - run:
          name: Deploy
          command: |
            curl -X POST $RENDER_WEBHOOK --data "image=$DOCKERHUB_USERNAME/p13:$CIRCLE_BUILD_NUM

workflows:
  version: 2
  all_in_one:
    jobs:
      - build_and_deploy:
          filters:
            branches:
              only:
                - master
